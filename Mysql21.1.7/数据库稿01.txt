									概述
    其实数据库的增删改查都与IO流有关，写SQL就可以完成增删改查
    接下来学的东西与JAVA没关系
    常见的数据库管理系统：
    	Oracle(甲骨文公司号称世界上最完善的数据库公司)(IBM-->eclipse日食)（传统行业银行、政府部门等用的多）
	Oracle-->MySQL(Oracle把MySQL收购了，互联网公司bat用的多，轻量级，不收费，属于Oracle数据库的一部分)
	DB2
	Sybase
	MS SqlServer(支持标准sql的数据库管理系统，学校一般教这个，但是市场应用小)
	
web服务器通用的端口（上网端口）：80
MySQL端口一般默认为3306，除非有特殊需求，否则不需要更改（改了必须要记住）
管理员用户密码：333/so1esou1

  怎么打开？cmd命令窗口输入"mysql -uroot -pso1esou1"回车-->出现"mysql>"代表成功（-uroot管理员账号，-p后输入密码，输入-p后按回车，可以保密输入密码，密码都变成"*"符号）
之后输入sql进行数据的增删改查

  MySQL的删除（很麻烦），不卸载干净的话下一次安装会失败：msi文件（安装时的文件）双击，下一步remove，还没卸载干净，
c盘下program files下mysql也要删掉，c盘下programdata里面也藏了一个mysql

一些命令：select database();查询现在使用的数据库
	  select version();查询使用的数据库的版本
	  \c：结束一条语句
	  exit:退出mysql
	  show create table emp; 查看创建表的语句

1、sql、DB、DBMS之间的关系是什么？
  DB：DataBase（数据库，实际上在硬盘上以文件的形式存在）
  DBMS：DataBase Management System(数据库关系系统，常见的有MySQL、Oracle、DB2、Sybase、SqlServer...)
  SQL:结构化查询语言，是一门标准通用的语言，标准的sql适合于所有的数据库产品
SQL属于高级语言，只要能看懂英语单词的，写出来的sql语句可以读懂什么意思。
SQL语句在执行时，实际上也会在内部先进行编译，然后再执行sql（sql语句编译由DBMS完成，我们看不见）
  三者间的关系：DBMS负责执行sql语句，通过执行sql语句来操作DB中的数据DBMS -(执行)-> SQL -(操作)-> DB

2、什么是表？
  table，是数据库的基本组成单元，所有的数据都以表格的形式组织，目的是可读性强
  一个表包括行（数据/记录data）和列（字段column）

学号(int)	姓名(VARCHAR)	年龄(int)
--------------------------------------------
110		张三		20
120		李四		21

每一个字段包含哪些属性？
  字段名、数据类型、相关的约束

  数据库里不是String，是VARCHAR（可变字符串）,还有很多数据类型写法不相同

3、学习MySQL主要还是学习可通用的SQL语句，那么SQL语句包括增删改查，SQL语句怎么分类呢？***
DQL（数据查询语言）:查询语句，凡是select语句都是DQL
DML（数据操作语言）：insert delete updata，对表中的数据进行增删改
DDL（数据定义语言）：create drop alter,对表结构的增删改
TCL（事物控制语言）：commit提交事务，rollback回滚事务（程序员两大难：线程+事务）（T:Transaction）
DCL（数据控制语言）：grant授权、revoke撤销权限等

4、导入数据（后期联系的时候使用这个演示的数据）
第一步：登录mysql数据库管理系统，dos命令窗口
第二步：查看有哪些数据库
  show databases;（这个不是sql语句，属于masql的命令，别的DBMS不能用（要分清sql语句和命令））
	+--------------------+
	| Database           |
	+--------------------+
	| information_schema |
	| mysql              |
	| test               |
	+--------------------+
第三步：创建属于我们自己的数据库
  create database bjpowernode;(mysql的命令)
第四步：使用bjpowernode数据
  use bjpowernode;(mysql的命令)
  完成后，使用的就是bjpowernode数据库
第五步：查看当前使用的数据库中有哪些表？
  show tables;(mysql的命令)
第六步：初始化数据
  mysql> source D:\course\05-MySQL\resources\bjpowernode.sql
  再show tables;
+-----------------------+
| Tables_in_bjpowernode |
+-----------------------+
| dept                  |
| emp                   |
| salgrade              |
+-----------------------+

5、bjpowernode.sql这个文件以sql结尾，这样的文件被称为“sql脚本”，什么是sql脚本
当一个文件的扩展名是.sql且该文件编写了大量的sql语句，我们称这样的文件为sql脚本。
注意：直接使用source命令可以执行sql脚本。
sql脚本中的数据量太大的时候无法打开，请使用source命令完成初始化

6、删除数据库：drop database bjpowernode;

7、查表的结构
+-----------------------+
| Tables_in_bjpowernode |
+-----------------------+
| dept                  |  （部门表）
| emp                   |  （员工表）
| salgrade              |  （工资等级表）
+-----------------------+
查看表的结构的方法：desc 表名;

mysql> desc dept;  部门表
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| DEPTNO | int(2)      | NO   | PRI | NULL    |       |    部门编号
| DNAME  | varchar(14) | YES  |     | NULL    |       |    部门名字
| LOC    | varchar(13) | YES  |     | NULL    |       |    部门位置
+--------+-------------+------+-----+---------+-------+

mysql> desc emp;   员工表
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| EMPNO    | int(4)      | NO   | PRI | NULL    |       |   员工编号
| ENAME    | varchar(10) | YES  |     | NULL    |       |   员工姓名
| JOB      | varchar(9)  | YES  |     | NULL    |       |   工作岗位
| MGR      | int(4)      | YES  |     | NULL    |       |   上级领导编号
| HIREDATE | date        | YES  |     | NULL    |       |   入职日期
| SAL      | double(7,2) | YES  |     | NULL    |       |   薪资
| COMM     | double(7,2) | YES  |     | NULL    |       |   津贴
| DEPTNO   | int(2)      | YES  |     | NULL    |       |   部门编号
+----------+-------------+------+-----+---------+-------+

mysql> desc salgrade;   工资等级表
+-------+---------+------+-----+---------+-------+
| Field | Type    | Null | Key | Default | Extra |
+-------+---------+------+-----+---------+-------+
| GRADE | int(11) | YES  |     | NULL    |       |   等级
| LOSAL | int(11) | YES  |     | NULL    |       |   最低薪资
| HISAL | int(11) | YES  |     | NULL    |       |   最高薪资
+-------+---------+------+-----+---------+-------+

8、表中的数据
命令：mysql> select * from 表名;

mysql> select * from emp;
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+

mysql> select * from dept;
+--------+------------+----------+
| DEPTNO | DNAME      | LOC      |
+--------+------------+----------+
|     10 | ACCOUNTING | NEW YORK |
|     20 | RESEARCH   | DALLAS   |
|     30 | SALES      | CHICAGO  |
|     40 | OPERATIONS | BOSTON   |
+--------+------------+----------+

mysql> select * from salgrade;
+-------+-------+-------+
| GRADE | LOSAL | HISAL |
+-------+-------+-------+
|     1 |   700 |  1200 |
|     2 |  1201 |  1400 |
|     3 |  1401 |  2000 |
|     4 |  2001 |  3000 |
|     5 |  3001 |  9999 |
+-------+-------+-------+

				
								SQL语句
一、简单的查询语句（DQL）
  语法格式：
    select 字段名1,字段名2,字段名3,.... from 表名;
  提示：任何一个sql语句必须以";"结尾
        sql语句不区分大小写，但是表中数据可能会区分。Oracle较严格，会区分

mysql> select ENAME from emp;
+--------+
| ENAME  |
+--------+
| SMITH  |
| ALLEN  |
| WARD   |
| JONES  |
| MARTIN |
| BLAKE  |
| CLARK  |
| SCOTT  |
| KING   |
| TURNER |
| ADAMS  |
| JAMES  |
| FORD   |
| MILLER |
+--------+

mysql> select EMPNO,ENAME from emp;
+-------+--------+
| EMPNO | ENAME  |
+-------+--------+
|  7369 | SMITH  |
|  7499 | ALLEN  |
|  7521 | WARD   |
|  7566 | JONES  |
|  7654 | MARTIN |
|  7698 | BLAKE  |
|  7782 | CLARK  |
|  7788 | SCOTT  |
|  7839 | KING   |
|  7844 | TURNER |
|  7876 | ADAMS  |
|  7900 | JAMES  |
|  7902 | FORD   |
|  7934 | MILLER |
+-------+--------+

*字段可以参与数学运算：
mysql> select ename,sal * 12 from emp;
+--------+----------+
| ename  | sal * 12 |
+--------+----------+
| SMITH  |  9600.00 |
| ALLEN  | 19200.00 |
| WARD   | 15000.00 |
| JONES  | 35700.00 |
| MARTIN | 15000.00 |
| BLAKE  | 34200.00 |
| CLARK  | 29400.00 |
| SCOTT  | 36000.00 |
| KING   | 60000.00 |
| TURNER | 18000.00 |
| ADAMS  | 13200.00 |
| JAMES  | 11400.00 |
| FORD   | 36000.00 |
| MILLER | 15600.00 |
+--------+----------+

*给查询结果的列重命名：
mysql> select ename,sal * 12 as yearsal from emp;（使用as来代替，as可以省略）
+--------+----------+
| ename  | yearsal  |
+--------+----------+
| SMITH  |  9600.00 |
| ALLEN  | 19200.00 |
| WARD   | 15000.00 |
| JONES  | 35700.00 |
| MARTIN | 15000.00 |
| BLAKE  | 34200.00 |
| CLARK  | 29400.00 |
| SCOTT  | 36000.00 |
| KING   | 60000.00 |
| TURNER | 18000.00 |
| ADAMS  | 13200.00 |
| JAMES  | 11400.00 |
| FORD   | 36000.00 |
| MILLER | 15600.00 |
+--------+----------+

别名中可以有中文吗？
select ename,sal * 12 as 年薪 from emp;  //错误
select ename,sal * 12 as '年薪' from emp;  //这样写可以（注意：双引号可以在mysql中运行，但不能在其他DBMS中运行，因此建议使用单引号）

mysql> select ename,sal * 12 as '年薪' from emp;
+--------+----------+
| ename  | 年薪        |
+--------+----------+
| SMITH  |  9600.00 |
| ALLEN  | 19200.00 |
| WARD   | 15000.00 |
| JONES  | 35700.00 |
| MARTIN | 15000.00 |
| BLAKE  | 34200.00 |
| CLARK  | 29400.00 |
| SCOTT  | 36000.00 |
| KING   | 60000.00 |
| TURNER | 18000.00 |
| ADAMS  | 13200.00 |
| JAMES  | 11400.00 |
| FORD   | 36000.00 |
| MILLER | 15600.00 |
+--------+----------+

查询所有字段：
select * from emp;  //sql中，*代表所有，实际开发中不建议使用*号，效率较低，自己私下用没事

mysql> select * from emp;
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+



二、条件查询：
  语法格式：
    select
      字段,字段...
    from
      表名
    where
      条件;
执行顺序：先from，再where，最后select

案例：（1）、查询工资等于5000的员工姓名？
  select ename from emp where sal = 5000;

mysql> select ename from emp where sal = 5000;
+-------+
| ename |
+-------+
| KING  |
+-------+
（2）、查询史密斯的工资
  select sal from emp where ename = 'smith';(VARCHAR字符串记得要用''括起来)

mysql> select sal from emp where ename = 'smith';
+--------+
| sal    |
+--------+
| 800.00 |
+--------+
（3）、找出工资高于3000的员工
  select ename,sal from emp where sal > 3000;

mysql> select ename,sal from emp where sal > 3000;
+-------+---------+
| ename | sal     |
+-------+---------+
| KING  | 5000.00 |
+-------+---------+
(4)找出工资不等于3000的
  select ename,sal from emp where sal <> 3000;(sql中<>代表不等于，也可以用!=)

mysql> select ename,sal from emp where sal <> 3000;
+--------+---------+
| ename  | sal     |
+--------+---------+
| SMITH  |  800.00 |
| ALLEN  | 1600.00 |
| WARD   | 1250.00 |
| JONES  | 2975.00 |
| MARTIN | 1250.00 |
| BLAKE  | 2850.00 |
| CLARK  | 2450.00 |
| KING   | 5000.00 |
| TURNER | 1500.00 |
| ADAMS  | 1100.00 |
| JAMES  |  950.00 |
| MILLER | 1300.00 |
+--------+---------+
（5）找出工资在1100到3000的员工
  select ename,sal from emp where sal >= 1100 and sal <=3000;(用and表示并且)
  另一种写法：select ename,sal from emp where sal between 1100 and 3000;(采用between的方式,between...and...是闭区间[1100~3000],必须左小右大)

mysql> select ename,sal from emp where sal >= 1100 and sal <=3000;
mysql> select ename,sal from emp where sal between 1100 and 3000;
+--------+---------+
| ename  | sal     |
+--------+---------+
| ALLEN  | 1600.00 |
| WARD   | 1250.00 |
| JONES  | 2975.00 |
| MARTIN | 1250.00 |
| BLAKE  | 2850.00 |
| CLARK  | 2450.00 |
| SCOTT  | 3000.00 |
| TURNER | 1500.00 |
| ADAMS  | 1100.00 |
| FORD   | 3000.00 |
| MILLER | 1300.00 |
+--------+---------+
between...and...除了使用在数字方面外，还可以使用在字符串方面
（6）select ename from emp where ename between 'A' and 'C';(名字首字母是A到C的员工，没有检索出C字母开头的员工，说明用在字符方面时是左闭右开)
+-------+
| ename |
+-------+
| ALLEN |
| BLAKE |
| ADAMS |
+-------+
（7）找出哪些人没有津贴?(COMM为null或者0，在数据库中是有区别的！在数据库中，null不是一个值，不能用"="衡量，必须使用is null或is not null)
select ename,sal,comm from emp where comm is null or comm = 0;(使用or)

mysql> select ename,sal,comm from emp where comm is null or comm = 0;
+--------+---------+------+
| ename  | sal     | comm |
+--------+---------+------+
| SMITH  |  800.00 | NULL |
| JONES  | 2975.00 | NULL |
| BLAKE  | 2850.00 | NULL |
| CLARK  | 2450.00 | NULL |
| SCOTT  | 3000.00 | NULL |
| KING   | 5000.00 | NULL |
| TURNER | 1500.00 | 0.00 |
| ADAMS  | 1100.00 | NULL |
| JAMES  |  950.00 | NULL |
| FORD   | 3000.00 | NULL |
| MILLER | 1300.00 | NULL |
+--------+---------+------+
（8）找出工作岗位是MANAGER和SALESMAN的员工？
select ename,job from emp where job = 'MANAGER' or job = 'SALESMAN';

mysql> select ename,job from emp where job = 'MANAGER' or job = 'SALESMAN';
+--------+----------+
| ename  | job      |
+--------+----------+
| ALLEN  | SALESMAN |
| WARD   | SALESMAN |
| JONES  | MANAGER  |
| MARTIN | SALESMAN |
| BLAKE  | MANAGER  |
| CLARK  | MANAGER  |
| TURNER | SALESMAN |
+--------+----------+

(9)and和or联合使用：找出薪资大于1000的并且部门编号是20或30部门的员工
  select ename,sal,deptno from emp where sal > 1000 and (deptno = 20 or deptno = 30);(and优先级高于or，不加括号的话前两个联合执行，后一个单独执行)

mysql> select ename,sal,deptno from emp where sal > 1000 and (deptno = 20 or deptno = 30);
+--------+---------+--------+
| ename  | sal     | deptno |
+--------+---------+--------+
| ALLEN  | 1600.00 |     30 |
| WARD   | 1250.00 |     30 |
| JONES  | 2975.00 |     20 |
| MARTIN | 1250.00 |     30 |
| BLAKE  | 2850.00 |     30 |
| SCOTT  | 3000.00 |     20 |
| TURNER | 1500.00 |     30 |
| ADAMS  | 1100.00 |     20 |
| FORD   | 3000.00 |     20 |
+--------+---------+--------+
注意：以后优先级不确定的时候，加小括号，不用记优先级
（10）in等同于or：找出工作岗位是MANAGER和SALESMAN的员工
  select ename,job from emp where job in('SALESMAN','MANAGER');

mysql> select ename,job from emp where job in('SALESMAN','MANAGER');
+--------+----------+
| ename  | job      |
+--------+----------+
| ALLEN  | SALESMAN |
| WARD   | SALESMAN |
| JONES  | MANAGER  |
| MARTIN | SALESMAN |
| BLAKE  | MANAGER  |
| CLARK  | MANAGER  |
| TURNER | SALESMAN |
+--------+----------+
not in：不在某些值当中
（11）模糊查询like：
模糊查询中一定要掌握两个特殊的符号，一个是%，一个是_,
%代表任意多个字符，_代表任意一个字符

找出名字当中含有O的员工？
  select ename from emp where ename like '%O%';

mysql> select ename from emp where ename like '%O%';
+-------+
| ename |
+-------+
| JONES |
| SCOTT |
| FORD  |
+-------+
找出第二个字母是'A'的员工？
  select ename from emp where ename like '_A%';

mysql> select ename from emp where ename like '_A%';
+--------+
| ename  |
+--------+
| WARD   |
| MARTIN |
| JAMES  |
+--------+
找出名字中最后一个字母是'T'的员工？
  select ename from emp where ename like '%T';

mysql> select ename from emp where ename like '%T';
+-------+
| ename |
+-------+
| SCOTT |   (Oracle默认账户scott，密码是tiger)
+-------+
找出名字中有下划线的员工？(转义字符)
  select ename from emp where ename like '%\_%';



三、排序
  升序或者降序，没有指定排序方法的话默认是升序排列

例：按照工资升序，找出员工名和薪资
  select ename,sal from emp order by sal;    (order：排序，by：通过)

mysql> select ename,sal from emp order by sal;
+--------+---------+
| ename  | sal     |
+--------+---------+
| SMITH  |  800.00 |
| JAMES  |  950.00 |
| ADAMS  | 1100.00 |
| WARD   | 1250.00 |
| MARTIN | 1250.00 |
| MILLER | 1300.00 |
| TURNER | 1500.00 |
| ALLEN  | 1600.00 |
| CLARK  | 2450.00 |
| BLAKE  | 2850.00 |
| JONES  | 2975.00 |
| FORD   | 3000.00 |
| SCOTT  | 3000.00 |
| KING   | 5000.00 |
+--------+---------+

*怎么指定升序或降序呢？
  asc表示升序，desc表示降序
  select ename,sal from emp order by sal asc;  //升序
  select ename,sal from emp order by sal desc;  //降序

需求：按照工资的降序排，工资一样的按照名字的升序排？
  select ename,sal from emp order by sal desc,ename asc;（注意：多字段排序，越靠前的字段，起的主导作用越大，后面的字段只有在前面的字段相等的情况下（无法完成排序的时候）才有可能被启用）

mysql> select ename,sal from emp order by sal desc,ename asc;   
+--------+---------+
| ename  | sal     |
+--------+---------+
| KING   | 5000.00 |
| FORD   | 3000.00 |
| SCOTT  | 3000.00 |
| JONES  | 2975.00 |
| BLAKE  | 2850.00 |
| CLARK  | 2450.00 |
| ALLEN  | 1600.00 |
| TURNER | 1500.00 |
| MILLER | 1300.00 |
| MARTIN | 1250.00 |
| WARD   | 1250.00 |
| ADAMS  | 1100.00 |
| JAMES  |  950.00 |
| SMITH  |  800.00 |
+--------+---------+

排序也可以用字段的顺序
  select ename,sal from emp order by 2;    （2代表第2列）开发中建议少用

mysql> select ename,sal from emp order by 2;
+--------+---------+
| ename  | sal     |
+--------+---------+
| SMITH  |  800.00 |
| JAMES  |  950.00 |
| ADAMS  | 1100.00 |
| WARD   | 1250.00 |
| MARTIN | 1250.00 |
| MILLER | 1300.00 |
| TURNER | 1500.00 |
| ALLEN  | 1600.00 |
| CLARK  | 2450.00 |
| BLAKE  | 2850.00 |
| JONES  | 2975.00 |
| FORD   | 3000.00 |
| SCOTT  | 3000.00 |
| KING   | 5000.00 |
+--------+---------+

找出工作岗位是SALESMAN的员工，并且要求按照薪资的降序排列
  select ename,job,sal from emp where job = 'SALESMAN' order by sal desc;

mysql> select ename,job,sal from emp where job = 'SALESMAN' order by sal desc;
+--------+----------+---------+
| ename  | job      | sal     |
+--------+----------+---------+
| ALLEN  | SALESMAN | 1600.00 |
| TURNER | SALESMAN | 1500.00 |
| WARD   | SALESMAN | 1250.00 |
| MARTIN | SALESMAN | 1250.00 |
+--------+----------+---------+

执行顺序：
  select
    *		3
  from
    表名	1
  where
    条件	2
  order by
    ....	4

order by是最后执行的！